% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upsimplerResampling.R
\name{upsimplerResampling}
\alias{upsimplerResampling}
\title{Apply upsimpler on several sample sets, resampling them (for testing purposes)}
\usage{
upsimplerResampling(
  sampleSets,
  metaDataRef,
  classColumn,
  sampleColumn,
  targetSample,
  upsimplerModule,
  upsimplerArgs,
  whichSeed = 1
)
}
\arguments{
\item{sampleSets}{List of different training data sample subsets used for subsetting the available training dataset.
These contain the actual samples, not just the IDs (as they were selected by \code{selectFeaturesMajority}; for the
minority classifier, just use the reduced dataset in a single-element list).}

\item{metaDataRef}{Dataframe containing the metadata of the samples, with the sample IDs as rownames.}

\item{classColumn}{Column name in the metadata dataframe containing the class information.}

\item{sampleColumn}{Column name in the metadata dataframe containing the sample identifier.}

\item{targetSample}{A list with the target sample ID ($id) and actual data ($data) to be used as seed for the
upsimpler algorithm. The actual data are needed because some sample sets might not contain the target sample.
Make sure that the data are a dataframe, so that the features can be subsetted correctly.}

\item{upsimplerModule}{The upsimpler Python package as imported by \code{reticulate}.}

\item{upsimplerArgs}{List of arguments to be passed to the upsimpler algorithm, separately for the initialization of the
\code{Upsimpler} class ($init), as well as for the \code{upsimple} method ($upsimple).}

\item{whichSeed}{Seed to be used for the random number generator. Default is 1.}
}
\value{
A replicated list of the input sample sets with the samples from the class of interest replaced
by synthetic samples, except for the target sample. Note that the names of the synthetic samples are
replaced by the names produced by upsimpler.
}
\description{
Function to apply the upsimpler algorithm on a list of sample sets.
Given a class of interest and a target sample from that class, this function
detects samples from this class and replaces them with new synthetic samples,
using the target sample as the seed. Whenever encountered, the target sample
is not replaced.
}
